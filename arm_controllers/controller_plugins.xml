<library path="lib/libarm_controllers">

  <class name="arm_controllers/TimeDelayController" type="arm_controllers::TimeDelayController" base_class_type="controller_interface::ControllerBase">
    <description>
	    Time Delay Controller
    </description>
  </class>

  <class name="arm_controllers/GravityCompController" type="arm_controllers::GravityCompController" base_class_type="controller_interface::ControllerBase">
    <description>
	    Gravity Compensation Controller
    </description>
  </class>

  <class name="arm_controllers/Computed_Torque_Controller" type="arm_controllers::Computed_Torque_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
	    Computed Torque Controller
    </description>
  </class>

  <class name="arm_controllers/Computed_Torque_Controller_CLIK" type="arm_controllers::Computed_Torque_Controller_CLIK" base_class_type="controller_interface::ControllerBase">
    <description>
	    Computed Torque Controller with Closed Loop Inverse Kinematics
    </description>
  </class>

  <class name="arm_controllers/AdaptiveImpedanceController" type="arm_controllers::AdaptiveImpedanceController" base_class_type="controller_interface::ControllerBase">
    <description>
	    Adaptive Impedance Controller
    </description>
  </class>

  <class name="arm_controllers/PassivityController" type="arm_controllers::PassivityController" base_class_type="controller_interface::ControllerBase">
    <description>
      Passivity Based Controller
    </description>
  </class>

  <class name="arm_controllers/Velocity_Controller" type="arm_controllers::Velocity_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
      Velocity Based Controller
    </description>
  </class>

  <class name="arm_controllers/Kinematic_Controller" type="arm_controllers::Kinematic_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
      Velocity Based Controller
    </description>
  </class>

  <class name="arm_controllers/GravityPD_Controller" type="arm_controllers::GravityPD_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
      Gravity Compensation and PD Controller
    </description>
  </class>

  <class name="arm_controllers/InverseDynamics_Controller" type="arm_controllers::InverseDynamics_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
      Inverse Dynamics Task Space Controller
    </description>
  </class>

</library>
